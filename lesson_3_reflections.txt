When would you want to use a remote repository rather than keeping all your work local?
Remote repos are used when publishing your own work, fetching others published work, and for collaborating with others.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
Automatically pulling changes from a remote would result in constantly having to spend effort merging changes on the remote with the local tracked branches, instead of developing your own branches and merging with the remote on your own terms. 

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Branches are divergent development paths within the same repository that may merge back into the repository. Clones are local copies of remote repositories that can be manually synchronised with the remote using pull and push requests. Forks are remote copies of other remote repositories that are not intended for synchronization between the remotes. Clones of forked repositories can be synchronized with the forked remoted without being synchronized with the repository the original remote of the forked remote.

What is the benefit of having a copy of the last known state of the remote stored locally?
It's much easier to manage merges with the remote as you are more aware of changes to the remote, can merge changes when offline, and can also "change the changes" without fear of corrupting the remote repository. Fast forward merges are more likely to happen. 

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Without Git or GitHub, I'd have to use a CVS or a different DVCS like Mercurial. These are not as well known. CVS's can be a bit simpler but are not as powerful. 

