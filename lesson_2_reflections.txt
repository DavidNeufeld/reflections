What happens when you initialize a repository? Why do you need to do it?
Git init creates a new empty repository, and prepares it for tracking files that are subsequently added to it. 

How is the staging area different from the working directory and the repository? What value do you think it offers?
You cannot work on files in the staging area, but they are not part of the repository. They can be overwritten or deleted in preparation for committal. This offers a way to prepare, review, and modify a commit candidate before it is actually committed. 

How can you use the staging area to make sure you have one commit per logical change?
By using git diff and git diff --staged to review the differences between the working, staged and most recent commit, you can tailor the staging area to only contain material associated with a particular logical change. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Branches help when working on separate versions of a program that may later merge, or with multiple developers concurrently working on the same code base but on different features.

How do the diagrams help you visualize the branch structure?
I could clearly see the ancestral chain of commits; which commits were and were not related, an how. 


